package itcm;
import java_cup.runtime.*;


parser code
{:
    private Symbol s;
    public void syntax_error(Symbol s) {
           this.s =s;
    }

    public Symbol getS() {
        return this.s;
    }
:};

// Terminales
terminal P_COMA,I_LLAVE,D_LLAVE,I_PAR,D_PAR,COMA;//Delimitadores
terminal MUL;
terminal POW;
terminal SUM;
terminal SUB;
terminal DIV;
terminal MOD;
terminal CONCAT;
terminal EX_RANGO;
terminal IN_RANGO;
terminal INC;
terminal DEC;
terminal AND;
terminal NOT;
terminal OR;
terminal MENOR, MAYOR, MENOR_IGUAL, MAYOR_IGUAL, IDENTICO;
terminal DIFERENTE;
terminal RETORNO;
terminal IGUAL;
terminal TIPODEDATO;
terminal FORIF;
terminal FOR;
terminal IF;
terminal FUN;
terminal RETURN;
terminal IMPORT;
terminal INPUT;
terminal PRINT;
terminal DECIMAL;
terminal NUMERO;
terminal IDENTIFICADOR;
terminal TEXTO;
terminal ERROR;
terminal ELSE;


// No terminales
non terminal OPERADOR_RELACIONAL;
non terminal DECLA;
non terminal ID_NUM;
non terminal EXPR_BOOL;
non terminal TIPOID;
non terminal MAS_TIPOID;
non terminal OP_ARIT;
non terminal ARIT;
non terminal MAS_ARIT;
non terminal ASIG;
non terminal VALOR;
non terminal DEFINICIONES;
non terminal COND;
non terminal MAS_COND;
non terminal OPR_LOGICO;
non terminal RIF;
non terminal RFOR;
non terminal RFORIF;
non terminal COMPONENTES;
non terminal CUERPO;
non terminal MAS_CUERPO;
non terminal VIENE_ELSE;
non terminal RFUN;
non terminal RANGO;
non terminal INCEXP;
non terminal PARAMETROS;
non terminal OPR_RANGO;
non terminal ESTRUCTURAS;
non terminal MASCOND;

non terminal VIENEID;

// Precedencias
//precedence left foo, bar;

// Gramaticas ó Reglas de producción
start with ID_NUM; // Cambiar esto luego

ID_NUM ::= IDENTIFICADOR:a ID_NUM {: RESULT=a; :} | /* empty */  ;
